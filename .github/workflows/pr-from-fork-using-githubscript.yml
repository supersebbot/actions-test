name: Go Generate using github-script with fork
on: workflow_dispatch
permissions:
  contents: read
  pull-requests: write
jobs:
  go-generate:
    runs-on: ubuntu-latest
    steps:
      - name: Create fork
        uses: actions/github-script@v5.0.0
        id: fr
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            try {
              let { data: response, status } = await github.rest.repos.createFork({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              if (status === 202)
              {
                return response;
              }
              else {
                throw `Unknown error (code ${status})`;
              }
            } catch (error) {
                let msg = `Fork failed:\n${error}`;
                core.setOutput('error', msg);
                throw error;
            }
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Run go-generate to fetch data.json
        run: make go-generate
      - name: Check for repository changes
        run: |
          if git diff --name-only --exit-code; then
            echo "No changes found in repository after 'go generate'"
            echo "changes_exist=false" >> $GITHUB_ENV
          else
            echo "Changes found in repository after 'go generate':"
            git diff --name-only
            echo "changes_exist=true" >> $GITHUB_ENV
          fi
      - name: Create branch, commit and push
        if: ${{ env.changes_exist == 'true' }}
        id: branch
        run: |
          BRANCH="githubaction-go-generate-$(date +%Y-%m-%d-%H-%M-%S)"
          echo "::set-output name=branch::$BRANCH"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git checkout -b "$BRANCH"
          git commit -a -m 'go generate'
          git push https://${{secrets.BOT_TOKEN}}@github.com/${{ fromJSON(steps.fr.outputs.result).full_name }}.git "$BRANCH"
      - name: Create Pull Request
        if: ${{ env.changes_exist == 'true' }}
        id: cpr
        uses: actions/github-script@v5.0.0
        env:
          SOURCE_BRANCH: ${{ steps.branch.outputs.branch }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.create({
              title: "[${{ github.ref_name }}] go generate",
              body: 'Auto-generated by GitHub Actions',
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: "${{ github.ref_name }}",
              head: "${{ fromJSON(steps.fr.outputs.result).owner.login }}:${{ env.SOURCE_BRANCH }}"
            });
            await github.rest.issues.addLabels({
              ...context.repo,
              issue_number: pr.number,
              labels: ["status/auto-created"],
            });
            console.log('Created new pull request');
            return pr.html_url;
      - name: Check outputs
        if: ${{ env.changes_exist == 'true' }}
        run: |
          echo "Pull Request URL - ${{ steps.cpr.outputs.result }}"
